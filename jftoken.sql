/*
 Navicat Premium Data Transfer

 Source Server         : Localhost MySql
 Source Server Type    : MySQL
 Source Server Version : 50724 (5.7.24)
 Source Host           : localhost:3306
 Source Schema         : jftoken

 Target Server Type    : MySQL
 Target Server Version : 50724 (5.7.24)
 File Encoding         : 65001

 Date: 01/11/2023 18:15:50
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for call_statuses
-- ----------------------------
DROP TABLE IF EXISTS `call_statuses`;
CREATE TABLE `call_statuses`  (
  `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 3 CHARACTER SET = utf8 COLLATE = utf8_unicode_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of call_statuses
-- ----------------------------
INSERT INTO `call_statuses` VALUES (1, 'served', '2023-06-14 02:55:36', '2023-06-14 02:55:36');
INSERT INTO `call_statuses` VALUES (2, 'noshow', '2023-06-14 02:55:36', '2023-06-14 02:55:36');

-- ----------------------------
-- Table structure for calls
-- ----------------------------
DROP TABLE IF EXISTS `calls`;
CREATE TABLE `calls`  (
  `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `queue_id` bigint(20) UNSIGNED NOT NULL,
  `service_id` bigint(20) UNSIGNED NOT NULL,
  `counter_id` bigint(20) UNSIGNED NOT NULL,
  `user_id` bigint(20) UNSIGNED NOT NULL,
  `token_letter` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `token_number` int(11) NOT NULL,
  `called_date` date NOT NULL,
  `started_at` datetime NULL DEFAULT NULL,
  `ended_at` datetime NULL DEFAULT NULL,
  `waiting_time` time NULL DEFAULT NULL,
  `served_time` time NULL DEFAULT NULL,
  `turn_around_time` time NULL DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  `call_status_id` bigint(20) UNSIGNED NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `calls_queue_id_foreign`(`queue_id`) USING BTREE,
  INDEX `calls_service_id_foreign`(`service_id`) USING BTREE,
  INDEX `calls_counter_id_foreign`(`counter_id`) USING BTREE,
  INDEX `calls_user_id_foreign`(`user_id`) USING BTREE,
  INDEX `calls_call_status_id_foreign`(`call_status_id`) USING BTREE,
  CONSTRAINT `calls_call_status_id_foreign` FOREIGN KEY (`call_status_id`) REFERENCES `call_statuses` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `calls_counter_id_foreign` FOREIGN KEY (`counter_id`) REFERENCES `counters` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `calls_queue_id_foreign` FOREIGN KEY (`queue_id`) REFERENCES `queues` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `calls_service_id_foreign` FOREIGN KEY (`service_id`) REFERENCES `services` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `calls_user_id_foreign` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 27 CHARACTER SET = utf8 COLLATE = utf8_unicode_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of calls
-- ----------------------------
INSERT INTO `calls` VALUES (6, 1, 1, 1, 2, 'KK', 1, '2023-06-22', '2023-06-22 16:51:37', '2023-06-22 17:13:38', '00:02:33', '00:22:01', '00:24:34', '2023-06-22 16:53:03', '2023-06-22 17:13:38', 1);
INSERT INTO `calls` VALUES (7, 2, 1, 1, 2, 'KK', 2, '2023-06-22', '2023-06-22 17:15:59', '2023-06-22 17:16:35', '00:00:39', NULL, NULL, '2023-06-22 17:15:59', '2023-06-22 17:16:35', 2);
INSERT INTO `calls` VALUES (8, 3, 1, 1, 2, 'KK', 3, '2023-06-22', '2023-06-22 17:17:43', NULL, '00:02:01', NULL, NULL, '2023-06-22 17:17:43', '2023-06-22 17:17:43', NULL);
INSERT INTO `calls` VALUES (9, 4, 2, 2, 3, 'KE', 1, '2023-06-22', '2023-06-22 17:19:15', NULL, '00:03:28', NULL, NULL, '2023-06-22 17:19:15', '2023-06-22 17:19:15', NULL);
INSERT INTO `calls` VALUES (16, 101, 1, 1, 1, 'KK', 1, '2023-06-26', '2023-06-26 09:25:45', NULL, '00:00:10', NULL, NULL, '2023-06-26 09:34:31', '2023-06-26 09:34:31', NULL);
INSERT INTO `calls` VALUES (20, 102, 3, 1, 1, 'AK', 1, '2023-07-24', '2023-07-24 10:28:12', NULL, '00:00:55', NULL, NULL, '2023-07-24 10:35:12', '2023-07-24 10:35:12', NULL);
INSERT INTO `calls` VALUES (25, 117, 1, 1, 2, 'KK', 1, '2023-07-25', '2023-07-25 10:27:48', '2023-07-25 10:40:18', '00:01:08', '00:12:30', '00:13:38', '2023-07-25 10:39:34', '2023-07-25 10:40:18', 1);
INSERT INTO `calls` VALUES (26, 118, 1, 1, 2, 'KK', 2, '2023-07-25', '2023-07-25 10:40:23', '2023-07-25 10:40:37', '00:00:32', NULL, NULL, '2023-07-25 10:40:23', '2023-07-25 10:40:37', 2);

-- ----------------------------
-- Table structure for counters
-- ----------------------------
DROP TABLE IF EXISTS `counters`;
CREATE TABLE `counters`  (
  `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `status` tinyint(1) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 3 CHARACTER SET = utf8 COLLATE = utf8_unicode_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of counters
-- ----------------------------
INSERT INTO `counters` VALUES (1, 'Konter 1', 1, '2023-06-22 16:51:06', '2023-06-22 16:51:06');
INSERT INTO `counters` VALUES (2, 'Konter 2', 1, '2023-06-22 16:51:15', '2023-06-22 16:51:15');

-- ----------------------------
-- Table structure for failed_jobs
-- ----------------------------
DROP TABLE IF EXISTS `failed_jobs`;
CREATE TABLE `failed_jobs`  (
  `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `uuid` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `connection` text CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `queue` text CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `payload` longtext CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `exception` longtext CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `failed_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `failed_jobs_uuid_unique`(`uuid`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_unicode_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of failed_jobs
-- ----------------------------

-- ----------------------------
-- Table structure for jobs
-- ----------------------------
DROP TABLE IF EXISTS `jobs`;
CREATE TABLE `jobs`  (
  `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `queue` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `payload` longtext CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `attempts` tinyint(3) UNSIGNED NOT NULL,
  `reserved_at` int(10) UNSIGNED NULL DEFAULT NULL,
  `available_at` int(10) UNSIGNED NOT NULL,
  `created_at` int(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `jobs_queue_index`(`queue`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_unicode_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of jobs
-- ----------------------------

-- ----------------------------
-- Table structure for languages
-- ----------------------------
DROP TABLE IF EXISTS `languages`;
CREATE TABLE `languages`  (
  `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `code` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `name` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `display` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `image` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  `token_translation` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL,
  `please_proceed_to_translation` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `languages_code_unique`(`code`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 9 CHARACTER SET = utf8 COLLATE = utf8_unicode_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of languages
-- ----------------------------
INSERT INTO `languages` VALUES (1, 'gb', 'English', 'US English Female', NULL, '2023-06-14 02:55:36', '2023-06-14 02:55:36', 'Token', 'Please Proceed to');
INSERT INTO `languages` VALUES (2, 'fr', 'French', 'French Female', NULL, '2023-06-14 02:55:36', '2023-06-14 02:55:36', 'Jeton', 'Veuillez passer à');
INSERT INTO `languages` VALUES (3, 'in', 'Hindi', 'Hindi Female', NULL, '2023-06-14 02:55:36', '2023-06-14 02:55:36', ' टोकन', ' कृपया आगे बढ़ें');
INSERT INTO `languages` VALUES (4, 'sa', 'Arabic', 'Arabic Male', NULL, '2023-06-14 02:55:36', '2023-06-14 02:55:36', ' رمز', 'يرجى المتابعة إلى');
INSERT INTO `languages` VALUES (5, 'es', 'Spanish', 'Spanish Female', NULL, '2023-06-14 02:55:36', '2023-06-14 02:55:36', ' simbólico', 'por favor proceda a');
INSERT INTO `languages` VALUES (6, 'pt', 'Portuguese', 'Portuguese Female', NULL, '2023-06-14 02:55:36', '2023-06-14 02:55:36', ' símbolo', 'Por favor, prossiga para');
INSERT INTO `languages` VALUES (7, 'it', 'Italian', 'Italian Female', NULL, '2023-06-14 02:55:36', '2023-06-14 02:55:36', ' gettone', 'si prega di procedere a');
INSERT INTO `languages` VALUES (8, 'id', 'Indonesian', 'Indonesian Female', NULL, '2023-06-14 02:55:36', '2023-06-22 16:41:03', 'No Antrian', 'silakan menuju');

-- ----------------------------
-- Table structure for migrations
-- ----------------------------
DROP TABLE IF EXISTS `migrations`;
CREATE TABLE `migrations`  (
  `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `migration` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `batch` int(11) NOT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 25 CHARACTER SET = utf8 COLLATE = utf8_unicode_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of migrations
-- ----------------------------
INSERT INTO `migrations` VALUES (1, '2014_10_12_000000_create_users_table', 1);
INSERT INTO `migrations` VALUES (2, '2014_10_12_100000_create_password_resets_table', 1);
INSERT INTO `migrations` VALUES (3, '2016_07_16_161740_create_services_table', 1);
INSERT INTO `migrations` VALUES (4, '2016_07_16_180929_create_counters_table', 1);
INSERT INTO `migrations` VALUES (5, '2016_07_16_190715_create_queues_table', 1);
INSERT INTO `migrations` VALUES (6, '2016_07_19_170334_create_calls_table', 1);
INSERT INTO `migrations` VALUES (7, '2016_08_24_231859_create_languages_table', 1);
INSERT INTO `migrations` VALUES (8, '2016_09_28_123908_create_settings_table', 1);
INSERT INTO `migrations` VALUES (9, '2019_08_19_000000_create_failed_jobs_table', 1);
INSERT INTO `migrations` VALUES (10, '2019_12_14_000001_create_personal_access_tokens_table', 1);
INSERT INTO `migrations` VALUES (11, '2022_01_25_093555_create_table_call_statuses', 1);
INSERT INTO `migrations` VALUES (12, '2022_01_25_094223_add_column_call_status_id_to_calls', 1);
INSERT INTO `migrations` VALUES (13, '2022_01_31_083907_alter_table_calls', 1);
INSERT INTO `migrations` VALUES (14, '2022_02_05_075323_change_column_type_calls', 1);
INSERT INTO `migrations` VALUES (15, '2022_02_11_053149_create_sessions_table', 1);
INSERT INTO `migrations` VALUES (16, '2022_02_17_072255_create_permission_tables', 1);
INSERT INTO `migrations` VALUES (17, '2022_02_18_095631_add_column_image_on_users', 1);
INSERT INTO `migrations` VALUES (18, '2022_02_18_121934_add_columns__on_settings', 1);
INSERT INTO `migrations` VALUES (19, '2022_03_04_061813_alter_table_languages', 1);
INSERT INTO `migrations` VALUES (20, '2022_03_31_054417_alter_table_services', 1);
INSERT INTO `migrations` VALUES (21, '2022_04_01_045644_alter_table_settings', 1);
INSERT INTO `migrations` VALUES (22, '2022_04_01_085135_alter_table_queues', 1);
INSERT INTO `migrations` VALUES (23, '2022_04_02_103600_create_jobs_table', 1);
INSERT INTO `migrations` VALUES (24, '2022_07_02_052217_add_column_to_settings_table', 1);

-- ----------------------------
-- Table structure for model_has_permissions
-- ----------------------------
DROP TABLE IF EXISTS `model_has_permissions`;
CREATE TABLE `model_has_permissions`  (
  `permission_id` bigint(20) UNSIGNED NOT NULL,
  `model_type` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `model_id` bigint(20) UNSIGNED NOT NULL,
  PRIMARY KEY (`permission_id`, `model_id`, `model_type`) USING BTREE,
  INDEX `model_has_permissions_model_id_model_type_index`(`model_id`, `model_type`) USING BTREE,
  CONSTRAINT `model_has_permissions_permission_id_foreign` FOREIGN KEY (`permission_id`) REFERENCES `permissions` (`id`) ON DELETE CASCADE ON UPDATE RESTRICT
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_unicode_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of model_has_permissions
-- ----------------------------

-- ----------------------------
-- Table structure for model_has_roles
-- ----------------------------
DROP TABLE IF EXISTS `model_has_roles`;
CREATE TABLE `model_has_roles`  (
  `role_id` bigint(20) UNSIGNED NOT NULL,
  `model_type` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `model_id` bigint(20) UNSIGNED NOT NULL,
  PRIMARY KEY (`role_id`, `model_id`, `model_type`) USING BTREE,
  INDEX `model_has_roles_model_id_model_type_index`(`model_id`, `model_type`) USING BTREE,
  CONSTRAINT `model_has_roles_role_id_foreign` FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE CASCADE ON UPDATE RESTRICT
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_unicode_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of model_has_roles
-- ----------------------------
INSERT INTO `model_has_roles` VALUES (1, 'App\\Models\\User', 1);
INSERT INTO `model_has_roles` VALUES (2, 'App\\Models\\User', 2);
INSERT INTO `model_has_roles` VALUES (2, 'App\\Models\\User', 3);

-- ----------------------------
-- Table structure for password_resets
-- ----------------------------
DROP TABLE IF EXISTS `password_resets`;
CREATE TABLE `password_resets`  (
  `email` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `token` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  INDEX `password_resets_email_index`(`email`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_unicode_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of password_resets
-- ----------------------------

-- ----------------------------
-- Table structure for permissions
-- ----------------------------
DROP TABLE IF EXISTS `permissions`;
CREATE TABLE `permissions`  (
  `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `guard_name` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `permissions_name_guard_name_unique`(`name`, `guard_name`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 12 CHARACTER SET = utf8 COLLATE = utf8_unicode_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of permissions
-- ----------------------------
INSERT INTO `permissions` VALUES (1, 'view dashboard', 'web', '2023-06-14 02:55:35', '2023-06-14 02:55:35');
INSERT INTO `permissions` VALUES (2, 'view counters', 'web', '2023-06-14 02:55:35', '2023-06-14 02:55:35');
INSERT INTO `permissions` VALUES (3, 'view services', 'web', '2023-06-14 02:55:35', '2023-06-14 02:55:35');
INSERT INTO `permissions` VALUES (4, 'view users', 'web', '2023-06-14 02:55:35', '2023-06-14 02:55:35');
INSERT INTO `permissions` VALUES (5, 'call token', 'web', '2023-06-14 02:55:35', '2023-06-14 02:55:35');
INSERT INTO `permissions` VALUES (6, 'view settings', 'web', '2023-06-14 02:55:35', '2023-06-14 02:55:35');
INSERT INTO `permissions` VALUES (7, 'view reports', 'web', '2023-06-14 02:55:35', '2023-06-14 02:55:35');
INSERT INTO `permissions` VALUES (8, 'view user_roles', 'web', '2023-06-14 02:55:35', '2023-06-14 02:55:35');
INSERT INTO `permissions` VALUES (9, 'issue token', 'web', '2023-06-14 02:55:35', '2023-06-14 02:55:35');
INSERT INTO `permissions` VALUES (10, 'view display', 'web', '2023-06-14 02:55:35', '2023-06-14 02:55:35');
INSERT INTO `permissions` VALUES (11, 'view profile', 'web', '2023-06-14 02:55:35', '2023-06-14 02:55:35');

-- ----------------------------
-- Table structure for personal_access_tokens
-- ----------------------------
DROP TABLE IF EXISTS `personal_access_tokens`;
CREATE TABLE `personal_access_tokens`  (
  `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `tokenable_type` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `tokenable_id` bigint(20) UNSIGNED NOT NULL,
  `name` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `token` varchar(64) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `abilities` text CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL,
  `last_used_at` timestamp NULL DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `personal_access_tokens_token_unique`(`token`) USING BTREE,
  INDEX `personal_access_tokens_tokenable_type_tokenable_id_index`(`tokenable_type`, `tokenable_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_unicode_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of personal_access_tokens
-- ----------------------------

-- ----------------------------
-- Table structure for queues
-- ----------------------------
DROP TABLE IF EXISTS `queues`;
CREATE TABLE `queues`  (
  `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `service_id` bigint(20) UNSIGNED NOT NULL,
  `number` int(11) NOT NULL,
  `called` tinyint(1) NOT NULL,
  `reference_no` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `letter` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `name` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL,
  `email` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL,
  `phone` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL,
  `position` int(11) NULL DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `queues_service_id_foreign`(`service_id`) USING BTREE,
  CONSTRAINT `queues_service_id_foreign` FOREIGN KEY (`service_id`) REFERENCES `services` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 121 CHARACTER SET = utf8 COLLATE = utf8_unicode_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of queues
-- ----------------------------
INSERT INTO `queues` VALUES (1, 1, 1, 1, 'MPrWTXNPa', 'KK', NULL, NULL, NULL, 0, '2023-06-22 16:49:04', '2023-06-22 16:51:37');
INSERT INTO `queues` VALUES (2, 1, 2, 1, '5KO2wmz4C', 'KK', NULL, NULL, NULL, 0, '2023-06-22 17:15:20', '2023-06-22 17:15:59');
INSERT INTO `queues` VALUES (3, 1, 3, 1, 'keRMiFGaS', 'KK', NULL, NULL, NULL, 0, '2023-06-22 17:15:42', '2023-06-22 17:17:43');
INSERT INTO `queues` VALUES (4, 2, 1, 1, 'vOT1A2Tu0', 'KE', NULL, NULL, NULL, 0, '2023-06-22 17:15:47', '2023-06-22 17:19:15');
INSERT INTO `queues` VALUES (5, 3, 1, 0, 'z1HgtEWiO', 'AK', NULL, NULL, NULL, 1, '2023-06-22 17:15:52', '2023-06-22 17:15:52');
INSERT INTO `queues` VALUES (6, 3, 2, 0, 'hkqzkMVVl', 'AK', NULL, NULL, NULL, 2, '2023-06-22 17:26:01', '2023-06-22 17:26:01');
INSERT INTO `queues` VALUES (7, 4, 1, 0, 'oxbuc1VkI', 'AM', NULL, NULL, NULL, 1, '2023-06-22 17:29:18', '2023-06-22 17:29:18');
INSERT INTO `queues` VALUES (8, 2, 2, 0, 'yzdmvucJC', 'KE', NULL, NULL, NULL, 1, '2023-06-22 17:29:28', '2023-06-22 17:29:28');
INSERT INTO `queues` VALUES (9, 3, 3, 0, 'DZuSBS140', 'AK', NULL, NULL, NULL, 3, '2023-06-22 17:34:10', '2023-06-22 17:34:10');
INSERT INTO `queues` VALUES (10, 4, 2, 0, 'pjTSwbzcZ', 'AM', NULL, NULL, NULL, 2, '2023-06-22 17:35:43', '2023-06-22 17:35:43');
INSERT INTO `queues` VALUES (11, 3, 4, 0, 'TT5KNVnD1', 'AK', NULL, NULL, NULL, 4, '2023-06-22 18:01:47', '2023-06-22 18:01:47');
INSERT INTO `queues` VALUES (12, 3, 5, 0, 'wyR0zQ3g7', 'AK', NULL, NULL, NULL, 5, '2023-06-22 18:03:17', '2023-06-22 18:03:17');
INSERT INTO `queues` VALUES (13, 3, 6, 0, '06Ub1taey', 'AK', NULL, NULL, NULL, 6, '2023-06-22 18:06:15', '2023-06-22 18:06:15');
INSERT INTO `queues` VALUES (14, 5, 1, 0, 'cik8AitiD', 'PD', NULL, NULL, NULL, 1, '2023-06-22 18:09:49', '2023-06-22 18:09:49');
INSERT INTO `queues` VALUES (15, 5, 2, 0, 'TB3Ft26Qe', 'PD', NULL, NULL, NULL, 2, '2023-06-22 18:11:20', '2023-06-22 18:11:20');
INSERT INTO `queues` VALUES (16, 3, 7, 0, 'dN7P471JC', 'AK', NULL, NULL, NULL, 7, '2023-06-22 18:27:56', '2023-06-22 18:27:56');
INSERT INTO `queues` VALUES (17, 4, 3, 0, 'u6sm12ZVY', 'AM', NULL, NULL, NULL, 3, '2023-06-22 18:28:15', '2023-06-22 18:28:15');
INSERT INTO `queues` VALUES (18, 4, 4, 0, 'cKHMrxg5U', 'AM', NULL, NULL, NULL, 4, '2023-06-22 18:29:37', '2023-06-22 18:29:37');
INSERT INTO `queues` VALUES (19, 2, 1, 0, 'xOCowX2qC', 'KE', NULL, NULL, NULL, 1, '2023-06-23 09:38:00', '2023-06-23 09:38:00');
INSERT INTO `queues` VALUES (20, 2, 2, 0, 'pYPYMoMmb', 'KE', NULL, NULL, NULL, 2, '2023-06-23 09:38:03', '2023-06-23 09:38:03');
INSERT INTO `queues` VALUES (21, 3, 1, 0, 'GRmnrUsx1', 'AK', NULL, NULL, NULL, 1, '2023-06-23 09:38:46', '2023-06-23 09:38:46');
INSERT INTO `queues` VALUES (22, 3, 2, 0, 'NlTlofEXt', 'AK', NULL, NULL, NULL, 2, '2023-06-23 09:39:03', '2023-06-23 09:39:03');
INSERT INTO `queues` VALUES (23, 3, 3, 0, 'aFRvpua5c', 'AK', NULL, NULL, NULL, 3, '2023-06-23 09:39:32', '2023-06-23 09:39:32');
INSERT INTO `queues` VALUES (24, 2, 3, 0, '8ACCsFpiu', 'KE', NULL, NULL, NULL, 3, '2023-06-23 09:51:47', '2023-06-23 09:51:47');
INSERT INTO `queues` VALUES (25, 3, 4, 0, 'UP4r1ak50', 'AK', NULL, NULL, NULL, 4, '2023-06-23 09:52:51', '2023-06-23 09:52:51');
INSERT INTO `queues` VALUES (26, 6, 1, 0, 'Kn0cNFOgJ', 'K', NULL, NULL, NULL, 1, '2023-06-23 09:54:45', '2023-06-23 09:54:45');
INSERT INTO `queues` VALUES (27, 6, 2, 0, '8WEyXmsd1', 'K', NULL, NULL, NULL, 2, '2023-06-23 09:56:09', '2023-06-23 09:56:09');
INSERT INTO `queues` VALUES (28, 6, 3, 0, 'xWts0MxMe', 'K', NULL, NULL, NULL, 3, '2023-06-23 09:56:57', '2023-06-23 09:56:57');
INSERT INTO `queues` VALUES (29, 5, 1, 0, '4NWH8gOLl', 'PD', NULL, NULL, NULL, 1, '2023-06-23 09:57:56', '2023-06-23 09:57:56');
INSERT INTO `queues` VALUES (30, 6, 4, 0, 'Aa2a3ikG1', 'K', NULL, NULL, NULL, 4, '2023-06-23 09:58:00', '2023-06-23 09:58:00');
INSERT INTO `queues` VALUES (31, 6, 5, 0, 'rQCGQKkgu', 'K', NULL, NULL, NULL, 5, '2023-06-23 10:07:05', '2023-06-23 10:07:05');
INSERT INTO `queues` VALUES (32, 5, 2, 0, 'wTqZNJio9', 'PD', NULL, NULL, NULL, 2, '2023-06-23 10:08:05', '2023-06-23 10:08:05');
INSERT INTO `queues` VALUES (33, 1, 1, 0, 'Lpq4oUVUT', 'KK', NULL, NULL, NULL, 1, '2023-06-23 10:09:47', '2023-06-23 10:09:47');
INSERT INTO `queues` VALUES (34, 5, 3, 0, 'xf6pJQ2Hk', 'PD', NULL, NULL, NULL, 3, '2023-06-23 10:13:20', '2023-06-23 10:13:20');
INSERT INTO `queues` VALUES (35, 5, 4, 0, 'Penqzb19P', 'PD', NULL, NULL, NULL, 4, '2023-06-23 10:16:18', '2023-06-23 10:16:18');
INSERT INTO `queues` VALUES (36, 3, 5, 0, 'oj9WlAc3U', 'AK', NULL, NULL, NULL, 5, '2023-06-23 10:18:11', '2023-06-23 10:18:11');
INSERT INTO `queues` VALUES (37, 6, 6, 0, 'uBNVXgEJd', 'K', NULL, NULL, NULL, 6, '2023-06-23 10:18:14', '2023-06-23 10:18:14');
INSERT INTO `queues` VALUES (38, 2, 4, 0, 'CPehG2pyA', 'KE', NULL, NULL, NULL, 4, '2023-06-23 10:19:25', '2023-06-23 10:19:25');
INSERT INTO `queues` VALUES (39, 6, 7, 0, 'KUU73aONP', 'K', NULL, NULL, NULL, 7, '2023-06-23 10:19:35', '2023-06-23 10:19:35');
INSERT INTO `queues` VALUES (40, 5, 5, 0, 'DCScR5An5', 'PD', NULL, NULL, NULL, 5, '2023-06-23 10:19:54', '2023-06-23 10:19:54');
INSERT INTO `queues` VALUES (41, 5, 6, 0, 'JdxQMPWLg', 'PD', NULL, NULL, NULL, 6, '2023-06-23 10:23:41', '2023-06-23 10:23:41');
INSERT INTO `queues` VALUES (42, 1, 2, 0, 'KbcZdeSxc', 'KK', NULL, NULL, NULL, 2, '2023-06-23 10:23:47', '2023-06-23 10:23:47');
INSERT INTO `queues` VALUES (43, 3, 6, 0, 'DBdAfqitl', 'AK', NULL, NULL, NULL, 6, '2023-06-23 10:23:53', '2023-06-23 10:23:53');
INSERT INTO `queues` VALUES (44, 5, 7, 0, 'XQvNLtK9d', 'PD', NULL, NULL, NULL, 7, '2023-06-23 10:24:15', '2023-06-23 10:24:15');
INSERT INTO `queues` VALUES (45, 1, 3, 0, '6es3N33jR', 'KK', NULL, NULL, NULL, 3, '2023-06-23 10:24:39', '2023-06-23 10:24:39');
INSERT INTO `queues` VALUES (46, 1, 4, 0, 'MkFUTj0gc', 'KK', NULL, NULL, NULL, 4, '2023-06-23 10:24:42', '2023-06-23 10:24:42');
INSERT INTO `queues` VALUES (47, 5, 8, 0, 'aKWj8iink', 'PD', NULL, NULL, NULL, 8, '2023-06-23 10:25:12', '2023-06-23 10:25:12');
INSERT INTO `queues` VALUES (48, 2, 5, 0, 'mL5OmNmGG', 'KE', NULL, NULL, NULL, 5, '2023-06-23 10:25:58', '2023-06-23 10:25:58');
INSERT INTO `queues` VALUES (49, 5, 9, 0, 'vFJH2QY3Q', 'PD', NULL, NULL, NULL, 9, '2023-06-23 10:26:49', '2023-06-23 10:26:49');
INSERT INTO `queues` VALUES (50, 3, 7, 0, 'ACoShBtim', 'AK', NULL, NULL, NULL, 7, '2023-06-23 10:41:34', '2023-06-23 10:41:34');
INSERT INTO `queues` VALUES (51, 3, 8, 0, 'wnY80iKSc', 'AK', NULL, NULL, NULL, 8, '2023-06-23 10:41:43', '2023-06-23 10:41:43');
INSERT INTO `queues` VALUES (52, 6, 8, 0, 'Zk1EbRG2q', 'K', NULL, NULL, NULL, 8, '2023-06-23 10:42:05', '2023-06-23 10:42:05');
INSERT INTO `queues` VALUES (53, 5, 10, 0, 'reoX6cgxH', 'PD', NULL, NULL, NULL, 10, '2023-06-23 10:42:35', '2023-06-23 10:42:35');
INSERT INTO `queues` VALUES (54, 6, 9, 0, 'pvXlB1dik', 'K', NULL, NULL, NULL, 9, '2023-06-23 10:43:09', '2023-06-23 10:43:09');
INSERT INTO `queues` VALUES (55, 3, 9, 0, '1MNTf9JBR', 'AK', NULL, NULL, NULL, 9, '2023-06-23 10:44:18', '2023-06-23 10:44:18');
INSERT INTO `queues` VALUES (56, 6, 10, 0, 'yXiXjq9Sa', 'K', NULL, NULL, NULL, 10, '2023-06-23 10:46:51', '2023-06-23 10:46:51');
INSERT INTO `queues` VALUES (57, 2, 6, 0, 'vSNYSaUez', 'KE', NULL, NULL, NULL, 6, '2023-06-23 10:49:13', '2023-06-23 10:49:13');
INSERT INTO `queues` VALUES (58, 1, 5, 0, 'tyiqckuyJ', 'KK', NULL, NULL, NULL, 5, '2023-06-23 10:50:01', '2023-06-23 10:50:01');
INSERT INTO `queues` VALUES (59, 6, 11, 0, '01yQK9Pp8', 'K', NULL, NULL, NULL, 11, '2023-06-23 10:52:29', '2023-06-23 10:52:29');
INSERT INTO `queues` VALUES (60, 5, 11, 0, 'TiRGDBNlC', 'PD', NULL, NULL, NULL, 11, '2023-06-23 10:53:27', '2023-06-23 10:53:27');
INSERT INTO `queues` VALUES (61, 5, 12, 0, 'lHnOsxEpW', 'PD', NULL, NULL, NULL, 12, '2023-06-23 10:55:19', '2023-06-23 10:55:19');
INSERT INTO `queues` VALUES (62, 5, 13, 0, '0UhgppOBw', 'PD', NULL, NULL, NULL, 13, '2023-06-23 10:55:40', '2023-06-23 10:55:40');
INSERT INTO `queues` VALUES (63, 2, 7, 0, 'v0h9ZIBR7', 'KE', NULL, NULL, NULL, 7, '2023-06-23 10:55:55', '2023-06-23 10:55:55');
INSERT INTO `queues` VALUES (64, 5, 14, 0, 'gXwzKzMnP', 'PD', NULL, NULL, NULL, 14, '2023-06-23 10:59:19', '2023-06-23 10:59:19');
INSERT INTO `queues` VALUES (65, 5, 15, 0, 'wCzbJq7B5', 'PD', NULL, NULL, NULL, 15, '2023-06-23 10:59:49', '2023-06-23 10:59:49');
INSERT INTO `queues` VALUES (66, 3, 10, 0, 'WVyrkjFcS', 'AK', NULL, NULL, NULL, 10, '2023-06-23 11:09:48', '2023-06-23 11:09:48');
INSERT INTO `queues` VALUES (67, 3, 11, 0, 'p3F5ZnXC6', 'AK', NULL, NULL, NULL, 11, '2023-06-23 11:10:00', '2023-06-23 11:10:00');
INSERT INTO `queues` VALUES (68, 6, 12, 0, 'G8AkUNjOe', 'K', NULL, NULL, NULL, 12, '2023-06-23 11:12:58', '2023-06-23 11:12:58');
INSERT INTO `queues` VALUES (69, 2, 8, 0, 'w6l5bApNZ', 'KE', NULL, NULL, NULL, 8, '2023-06-23 11:13:16', '2023-06-23 11:13:16');
INSERT INTO `queues` VALUES (70, 2, 9, 0, 'OQjCxP5F0', 'KE', NULL, NULL, NULL, 9, '2023-06-23 11:13:29', '2023-06-23 11:13:29');
INSERT INTO `queues` VALUES (71, 5, 16, 0, 'i9oc8au32', 'PD', NULL, NULL, NULL, 16, '2023-06-23 11:17:37', '2023-06-23 11:17:37');
INSERT INTO `queues` VALUES (72, 3, 12, 0, 'XdsBscPjV', 'AK', NULL, NULL, NULL, 12, '2023-06-23 11:29:54', '2023-06-23 11:29:54');
INSERT INTO `queues` VALUES (73, 5, 17, 0, 'HcE5dq0KE', 'PD', NULL, NULL, NULL, 17, '2023-06-23 11:36:23', '2023-06-23 11:36:23');
INSERT INTO `queues` VALUES (74, 2, 10, 0, 'WtiP44YjS', 'KE', NULL, NULL, NULL, 10, '2023-06-23 11:37:41', '2023-06-23 11:37:41');
INSERT INTO `queues` VALUES (75, 2, 11, 0, 'zOuIqSQA4', 'KE', NULL, NULL, NULL, 11, '2023-06-23 11:38:41', '2023-06-23 11:38:41');
INSERT INTO `queues` VALUES (76, 3, 13, 0, 'ln6t7F3N1', 'AK', NULL, NULL, NULL, 13, '2023-06-23 11:49:03', '2023-06-23 11:49:03');
INSERT INTO `queues` VALUES (77, 3, 14, 0, 'dFD7eifFg', 'AK', NULL, NULL, NULL, 14, '2023-06-23 12:16:39', '2023-06-23 12:16:39');
INSERT INTO `queues` VALUES (78, 2, 12, 0, 'aS5bxWbSr', 'KE', NULL, NULL, NULL, 12, '2023-06-23 12:17:07', '2023-06-23 12:17:07');
INSERT INTO `queues` VALUES (79, 2, 13, 0, '6b0qVugW5', 'KE', NULL, NULL, NULL, 13, '2023-06-23 12:17:40', '2023-06-23 12:17:40');
INSERT INTO `queues` VALUES (80, 4, 1, 0, '5P6QWv8fC', 'AM', NULL, NULL, NULL, 1, '2023-06-23 12:19:53', '2023-06-23 12:19:53');
INSERT INTO `queues` VALUES (81, 3, 15, 0, '0Cx4zaQoo', 'AK', NULL, NULL, NULL, 15, '2023-06-23 12:29:59', '2023-06-23 12:29:59');
INSERT INTO `queues` VALUES (82, 2, 14, 0, 'EIo5afNz5', 'KE', NULL, NULL, NULL, 14, '2023-06-23 12:30:52', '2023-06-23 12:30:52');
INSERT INTO `queues` VALUES (83, 5, 18, 0, 'ABajCNSJf', 'PD', NULL, NULL, NULL, 18, '2023-06-23 12:31:14', '2023-06-23 12:31:14');
INSERT INTO `queues` VALUES (84, 4, 2, 0, 'Xeh1kfHnt', 'AM', NULL, NULL, NULL, 2, '2023-06-23 12:33:50', '2023-06-23 12:33:50');
INSERT INTO `queues` VALUES (85, 4, 3, 0, '3pVGKOG0w', 'AM', NULL, NULL, NULL, 3, '2023-06-23 12:36:03', '2023-06-23 12:36:03');
INSERT INTO `queues` VALUES (86, 5, 19, 0, 'lWa3L0SKM', 'PD', NULL, NULL, NULL, 19, '2023-06-23 12:36:41', '2023-06-23 12:36:41');
INSERT INTO `queues` VALUES (87, 4, 4, 0, 'OKkeODyUh', 'AM', NULL, NULL, NULL, 4, '2023-06-23 12:37:22', '2023-06-23 12:37:22');
INSERT INTO `queues` VALUES (88, 1, 6, 0, 'OcejW4OTT', 'KK', NULL, NULL, NULL, 6, '2023-06-23 12:39:06', '2023-06-23 12:39:06');
INSERT INTO `queues` VALUES (89, 1, 7, 0, 'N1KFJdqyd', 'KK', NULL, NULL, NULL, 7, '2023-06-23 12:39:26', '2023-06-23 12:39:26');
INSERT INTO `queues` VALUES (90, 1, 8, 0, 'rrqw3Lakl', 'KK', NULL, NULL, NULL, 8, '2023-06-23 12:40:41', '2023-06-23 12:40:41');
INSERT INTO `queues` VALUES (91, 1, 9, 0, 'D20GOBk5z', 'KK', NULL, NULL, NULL, 9, '2023-06-23 12:41:25', '2023-06-23 12:41:25');
INSERT INTO `queues` VALUES (92, 1, 10, 0, 'f0S3Bnljh', 'KK', NULL, NULL, NULL, 10, '2023-06-23 12:42:07', '2023-06-23 12:42:07');
INSERT INTO `queues` VALUES (93, 1, 11, 0, 'mkt5VZAo7', 'KK', NULL, NULL, NULL, 11, '2023-06-23 12:42:19', '2023-06-23 12:42:19');
INSERT INTO `queues` VALUES (94, 1, 12, 0, 'PPUv5ZubY', 'KK', NULL, NULL, NULL, 12, '2023-06-23 12:42:57', '2023-06-23 12:42:57');
INSERT INTO `queues` VALUES (95, 3, 16, 0, 'HJ8OEPRyl', 'AK', NULL, NULL, NULL, 16, '2023-06-23 12:50:21', '2023-06-23 12:50:21');
INSERT INTO `queues` VALUES (96, 5, 20, 0, 'KIrvVmHJC', 'PD', NULL, NULL, NULL, 20, '2023-06-23 12:50:28', '2023-06-23 12:50:28');
INSERT INTO `queues` VALUES (97, 6, 13, 0, 'OjqyLpIKZ', 'K', NULL, NULL, NULL, 13, '2023-06-23 12:51:26', '2023-06-23 12:51:26');
INSERT INTO `queues` VALUES (98, 1, 13, 0, 'ZlRwJNniw', 'KK', NULL, NULL, NULL, 13, '2023-06-23 12:52:49', '2023-06-23 12:52:49');
INSERT INTO `queues` VALUES (99, 3, 17, 0, 'V7OlBw9Bc', 'AK', NULL, NULL, NULL, 17, '2023-06-23 12:53:28', '2023-06-23 12:53:28');
INSERT INTO `queues` VALUES (100, 4, 5, 0, 'PJDswIbEV', 'AM', NULL, NULL, NULL, 5, '2023-06-23 12:53:38', '2023-06-23 12:53:38');
INSERT INTO `queues` VALUES (101, 1, 1, 1, 'b3rRzrQRd', 'KK', NULL, NULL, NULL, 0, '2023-06-26 09:25:35', '2023-06-26 09:25:45');
INSERT INTO `queues` VALUES (102, 3, 1, 1, 'xUQdcCru8', 'AK', NULL, NULL, NULL, 0, '2023-07-24 10:27:17', '2023-07-24 10:28:12');
INSERT INTO `queues` VALUES (103, 5, 1, 0, 'TmGB3ycKg', 'PD', NULL, NULL, NULL, 1, '2023-07-24 10:38:38', '2023-07-24 10:38:38');
INSERT INTO `queues` VALUES (104, 2, 1, 0, 'tHu00jpSV', 'KE', NULL, NULL, NULL, 1, '2023-07-24 10:40:59', '2023-07-24 10:40:59');
INSERT INTO `queues` VALUES (105, 2, 2, 0, 'eTRhatWoK', 'KE', NULL, NULL, NULL, 2, '2023-07-24 10:52:12', '2023-07-24 10:52:12');
INSERT INTO `queues` VALUES (106, 3, 2, 0, 'qpZNulqoA', 'AK', NULL, NULL, NULL, 1, '2023-07-24 10:53:27', '2023-07-24 10:53:27');
INSERT INTO `queues` VALUES (107, 2, 3, 0, '86DFPgPS0', 'KE', NULL, NULL, NULL, 3, '2023-07-24 10:55:48', '2023-07-24 10:55:48');
INSERT INTO `queues` VALUES (108, 1, 1, 0, 'XYwwXOYpO', 'KK', NULL, NULL, NULL, 1, '2023-07-24 10:56:50', '2023-07-24 10:56:50');
INSERT INTO `queues` VALUES (109, 3, 3, 0, 'zyDJhU22x', 'AK', NULL, NULL, NULL, 2, '2023-07-24 11:45:10', '2023-07-24 11:45:10');
INSERT INTO `queues` VALUES (110, 6, 1, 0, 'bOGcvBrRf', 'K', NULL, NULL, NULL, 1, '2023-07-24 11:45:57', '2023-07-24 11:45:57');
INSERT INTO `queues` VALUES (111, 3, 4, 0, '1HuV9q62v', 'AK', NULL, NULL, NULL, 3, '2023-07-24 11:47:56', '2023-07-24 11:47:56');
INSERT INTO `queues` VALUES (112, 3, 5, 0, 'vFPJrYO72', 'AK', NULL, NULL, NULL, 4, '2023-07-24 11:48:29', '2023-07-24 11:48:29');
INSERT INTO `queues` VALUES (113, 3, 6, 0, 'cDVAK1loy', 'AK', NULL, NULL, NULL, 5, '2023-07-24 11:51:11', '2023-07-24 11:51:11');
INSERT INTO `queues` VALUES (114, 3, 7, 0, 'ACzb7JUTI', 'AK', NULL, NULL, NULL, 6, '2023-07-24 13:27:26', '2023-07-24 13:27:26');
INSERT INTO `queues` VALUES (115, 6, 2, 0, '8MjBDiSwY', 'K', NULL, NULL, NULL, 2, '2023-07-24 13:29:53', '2023-07-24 13:29:53');
INSERT INTO `queues` VALUES (116, 2, 4, 0, '13V0XLzX7', 'KE', NULL, NULL, NULL, 4, '2023-07-24 13:51:13', '2023-07-24 13:51:13');
INSERT INTO `queues` VALUES (117, 1, 1, 1, '6eQs2MnPq', 'KK', NULL, NULL, NULL, 0, '2023-07-25 10:26:40', '2023-07-25 10:27:48');
INSERT INTO `queues` VALUES (118, 1, 2, 1, 'XZhXDLj4k', 'KK', NULL, NULL, NULL, 0, '2023-07-25 10:39:51', '2023-07-25 10:40:23');
INSERT INTO `queues` VALUES (119, 1, 3, 0, 'wY5gzyOBT', 'KK', NULL, NULL, NULL, 1, '2023-07-25 10:39:53', '2023-07-25 10:40:23');
INSERT INTO `queues` VALUES (120, 1, 4, 0, 'opoGe62NF', 'KK', NULL, NULL, NULL, 2, '2023-07-25 10:40:13', '2023-07-25 10:40:23');

-- ----------------------------
-- Table structure for role_has_permissions
-- ----------------------------
DROP TABLE IF EXISTS `role_has_permissions`;
CREATE TABLE `role_has_permissions`  (
  `permission_id` bigint(20) UNSIGNED NOT NULL,
  `role_id` bigint(20) UNSIGNED NOT NULL,
  PRIMARY KEY (`permission_id`, `role_id`) USING BTREE,
  INDEX `role_has_permissions_role_id_foreign`(`role_id`) USING BTREE,
  CONSTRAINT `role_has_permissions_permission_id_foreign` FOREIGN KEY (`permission_id`) REFERENCES `permissions` (`id`) ON DELETE CASCADE ON UPDATE RESTRICT,
  CONSTRAINT `role_has_permissions_role_id_foreign` FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE CASCADE ON UPDATE RESTRICT
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_unicode_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of role_has_permissions
-- ----------------------------
INSERT INTO `role_has_permissions` VALUES (1, 2);
INSERT INTO `role_has_permissions` VALUES (3, 2);
INSERT INTO `role_has_permissions` VALUES (5, 2);
INSERT INTO `role_has_permissions` VALUES (9, 2);
INSERT INTO `role_has_permissions` VALUES (11, 2);

-- ----------------------------
-- Table structure for roles
-- ----------------------------
DROP TABLE IF EXISTS `roles`;
CREATE TABLE `roles`  (
  `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `guard_name` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `roles_name_guard_name_unique`(`name`, `guard_name`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 3 CHARACTER SET = utf8 COLLATE = utf8_unicode_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of roles
-- ----------------------------
INSERT INTO `roles` VALUES (1, 'Super-Admin', 'web', '2023-06-14 02:55:35', '2023-06-14 02:55:35');
INSERT INTO `roles` VALUES (2, 'Operator', 'web', '2023-06-22 16:41:50', '2023-06-22 16:41:50');

-- ----------------------------
-- Table structure for services
-- ----------------------------
DROP TABLE IF EXISTS `services`;
CREATE TABLE `services`  (
  `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `letter` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `start_number` int(11) NOT NULL,
  `status` tinyint(1) NOT NULL,
  `sms_enabled` tinyint(1) NOT NULL DEFAULT 0,
  `optin_message_enabled` tinyint(1) NOT NULL DEFAULT 0,
  `call_message_enabled` tinyint(1) NOT NULL DEFAULT 0,
  `noshow_message_enabled` tinyint(1) NOT NULL DEFAULT 0,
  `completed_message_enabled` tinyint(1) NOT NULL DEFAULT 0,
  `status_message_enabled` tinyint(1) NOT NULL DEFAULT 0,
  `optin_message_format` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL,
  `call_message_format` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL,
  `noshow_message_format` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL,
  `completed_message_format` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL,
  `status_message_format` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL,
  `status_message_positions` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL,
  `ask_name` tinyint(1) NOT NULL DEFAULT 0,
  `name_required` tinyint(1) NOT NULL DEFAULT 0,
  `ask_email` tinyint(1) NOT NULL DEFAULT 0,
  `email_required` tinyint(1) NOT NULL DEFAULT 0,
  `ask_phone` tinyint(1) NOT NULL DEFAULT 0,
  `phone_required` tinyint(1) NOT NULL DEFAULT 0,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 7 CHARACTER SET = utf8 COLLATE = utf8_unicode_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of services
-- ----------------------------
INSERT INTO `services` VALUES (1, 'KARTU KELUARGA', 'KK', 1, 1, 0, 0, 0, 0, 0, 0, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 0, 0, 0, '2023-06-22 16:46:28', '2023-06-22 16:46:28');
INSERT INTO `services` VALUES (2, 'KTP ELEKTRONIK', 'KE', 1, 1, 0, 0, 0, 0, 0, 0, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 0, 0, 0, '2023-06-22 16:46:53', '2023-06-22 16:46:53');
INSERT INTO `services` VALUES (3, 'AKTA KELAHIRAN', 'AK', 1, 1, 0, 0, 0, 0, 0, 0, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 0, 0, 0, '2023-06-22 16:47:18', '2023-06-22 16:47:18');
INSERT INTO `services` VALUES (4, 'AKTA KEMATIAN', 'AM', 1, 1, 0, 0, 0, 0, 0, 0, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 0, 0, 0, '2023-06-22 16:47:42', '2023-06-22 16:47:42');
INSERT INTO `services` VALUES (5, 'PINDAH DOMISILI', 'PD', 1, 1, 0, 0, 0, 0, 0, 0, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 0, 0, 0, '2023-06-22 16:48:16', '2023-06-22 16:48:16');
INSERT INTO `services` VALUES (6, 'KONSOLIDASI', 'K', 1, 1, 0, 0, 0, 0, 0, 0, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 0, 0, 0, '2023-06-22 16:48:33', '2023-06-22 16:48:33');

-- ----------------------------
-- Table structure for sessions
-- ----------------------------
DROP TABLE IF EXISTS `sessions`;
CREATE TABLE `sessions`  (
  `id` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `user_id` bigint(20) UNSIGNED NULL DEFAULT NULL,
  `service_id` bigint(20) UNSIGNED NULL DEFAULT NULL,
  `counter_id` bigint(20) UNSIGNED NULL DEFAULT NULL,
  `ip_address` varchar(45) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL,
  `user_agent` text CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL,
  `payload` longtext CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `last_activity` int(11) NOT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `sessions_service_id_foreign`(`service_id`) USING BTREE,
  INDEX `sessions_counter_id_foreign`(`counter_id`) USING BTREE,
  INDEX `sessions_user_id_index`(`user_id`) USING BTREE,
  INDEX `sessions_last_activity_index`(`last_activity`) USING BTREE,
  CONSTRAINT `sessions_counter_id_foreign` FOREIGN KEY (`counter_id`) REFERENCES `counters` (`id`) ON DELETE SET NULL ON UPDATE RESTRICT,
  CONSTRAINT `sessions_service_id_foreign` FOREIGN KEY (`service_id`) REFERENCES `services` (`id`) ON DELETE SET NULL ON UPDATE RESTRICT
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_unicode_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of sessions
-- ----------------------------
INSERT INTO `sessions` VALUES ('EgiyqAnR3HwmG0vGVUHTDBFjHADXM8lyCojpOGmY', NULL, NULL, NULL, '127.0.0.1', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36', 'ZXlKcGRpSTZJbEpDWTFaellscG9lRkFyTDFabVZ6QXlWblJQYTJjOVBTSXNJblpoYkhWbElqb2lTSGRITUV4eGRYSnVTbWxvU21nclpWaEtXRWxaUzFKMFpDdFJMMEoxZG05eFpWVlhiRTlXVkVWelYwdDVhV1JPZVdkdmVtUTVZMGxzYUVaMWEyRndTelo2Y21KbVNtOUxkMGMxTDFGa1QyVjJRa1JYVUhoc1lXZDZkVUkxYkZoRWN6UXhSalpzVGpNeUsya3JTV2R5T1hGWk4zTktWMVZtZUV0VmJWb3dORWRVWmpKVVFWTlJkM1Y1ZUVKaGFHcDBRVEZYUjNGNGRUQkljemR6YnpSQlJsRlNaMUJSVlhkTU9YUlFWVUo0S3pkVVZreHRSVmRYUW5KcGNVZG9iRWxrUm1wdlFrODRkMGRxUkVSbWVIRnpXVTFZZVdSRFVucENiblJUVm5OVFkxaE9ObUZuYmxZMk9HdFhlbEp3WmtodWNucHplaTlaWjJ4S1QxVmhTR1ZHY2k5V01ETnlOR1YyUmtndlNYbExRek56Vm1VMFZtYzlQU0lzSW0xaFl5STZJamd5T1dZME5HWm1OalZtTVRVeFlqQTBOak0zWm1aak16UmlOREF4T1RNNE0yTTJZakJrTldFMlltRTFOV00yWmpBeU5XVTVOR0poWldSalltVmtaR0lpTENKMFlXY2lPaUlpZlE9PQ==', 1691056392);
INSERT INTO `sessions` VALUES ('fgP63CwSvrvKff9xN1QlQhvG1q76tm75kioFXyuG', 1, 3, 1, '127.0.0.1', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36', '', 1690181478);
INSERT INTO `sessions` VALUES ('NAlv4rC1aR050etCMgjz6iq6ORR5pQxfqcOB3FOG', 1, NULL, NULL, '127.0.0.1', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36', '', 1698837322);
INSERT INTO `sessions` VALUES ('PRl7UAfBHTSCGoGTKFMmSnsiueW6UC72IXtLbSxE', NULL, NULL, NULL, '127.0.0.1', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36', 'ZXlKcGRpSTZJakpaU1ZCcE1FNUdkMk4zVEU4eFMxUTViSEpXWW1jOVBTSXNJblpoYkhWbElqb2lhRFJqY0hSUmRtTjFVRXhyUnpkNmJXWnNUVGhqY0hWeGRHMDBWbkZHTWtKUWFFOHZSVXB3TkZKcFREQlVWbTl0TTJ4SVMxUlhaa3BDV1c1UGNVWXZkbVVyYjFwSWVubFdObXBGVm5vNFJsWmtNbVp2VURWTmFHOTNXSEkyVlZneFRFcGFPVFZGTmtWMU0xWnZOR05FUkZOdVQwNHZNMDlIVFhkUVpIZ3ZTMGhCUXpCcVRtZFphbFpaZDI4d01tUlVkV2ROTTBGdFQzaEVkak55YjNFNU5USk9PVUlyU1ZoTGNGcDJhamNyUjJ4MVRHazBORTVUZEZsTlJHOXJabWMwZURFeFkyNVZjekp1VW5CMU1Gb3lSRmN4VkZwVmRFZFNOR1JXV1RWNlJucDFOamhSTUV4a1RFZHlXbnBPUVZveUswRTNjRTFMTmtVNWFra3hXVEY0ZVZKRlFqRmlOWGxWTkZwbmVqVTBXR2hTTjFweGJFRTlQU0lzSW0xaFl5STZJbU01WWpWbU9HWmpaRE0wT0dOaU1tRXdPR0V5TURBeE4yUmhPREJoWWpCaVpqRTBNVGhsWkdWak5HVmpORFl4WW1Vek5XTXlaVFZrT0dWall6RTVOMlFpTENKMFlXY2lPaUlpZlE9PQ==', 1692672549);
INSERT INTO `sessions` VALUES ('sspnXnoHnUol5Iv3Y2EFvPjFjC5cjv7Zq7vkBtzD', 2, 1, 1, '127.0.0.1', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36', '', 1690256445);
INSERT INTO `sessions` VALUES ('yt8E36O6QfPjSMueKQHvGkMxz3fEz3EmKJXCCZ2q', 1, NULL, NULL, '127.0.0.1', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36', '', 1690256273);

-- ----------------------------
-- Table structure for settings
-- ----------------------------
DROP TABLE IF EXISTS `settings`;
CREATE TABLE `settings`  (
  `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `language_id` bigint(20) UNSIGNED NULL DEFAULT NULL,
  `name` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `address` text CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `email` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `phone` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL,
  `location` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `timezone` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `logo` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL,
  `display_notification` text CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL,
  `display_font_size` int(11) NULL DEFAULT NULL,
  `display_font_color` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL,
  `sms_url` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL,
  `sms_enabled` tinyint(1) NOT NULL DEFAULT 0,
  `installed` int(11) NOT NULL DEFAULT 0,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `settings_language_id_foreign`(`language_id`) USING BTREE,
  CONSTRAINT `settings_language_id_foreign` FOREIGN KEY (`language_id`) REFERENCES `languages` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 2 CHARACTER SET = utf8 COLLATE = utf8_unicode_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of settings
-- ----------------------------
INSERT INTO `settings` VALUES (1, 8, 'Dispendukcapil', 'Jl. Dermojoyo No.30, Payaman', 'dispendukcapil@nganjukkab.go.id', '0358321150', 'Kab. Nganjuk', 'Asia/Jakarta', NULL, 'Selamat datang di Dinas Kependudukan dan Pencatatan Sipil Kab. Nganjuk', 18, '#000000', NULL, 0, 2, '2023-06-22 09:15:45', '2023-06-22 17:26:48');

-- ----------------------------
-- Table structure for users
-- ----------------------------
DROP TABLE IF EXISTS `users`;
CREATE TABLE `users`  (
  `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `email` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `email_verified_at` timestamp NULL DEFAULT NULL,
  `password` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `remember_token` varchar(100) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  `image` varchar(191) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `users_email_unique`(`email`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 4 CHARACTER SET = utf8 COLLATE = utf8_unicode_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of users
-- ----------------------------
INSERT INTO `users` VALUES (1, 'Dinas Kependudukan dan Pencatatan Sipil Kab. Nganjuk', 'admin@mail.com', NULL, '$2y$10$Y9vPYpebcu3d/PyRgCdvWumd7oA.q9Yh70qH5jQAX/HJXPLJGHCCW', NULL, '2023-06-14 02:55:36', '2023-06-22 17:04:38', NULL);
INSERT INTO `users` VALUES (2, 'Konter 1', 'konter1@mail.com', NULL, '$2y$10$X5bq3j.Hu.WWl/8aJ6QPeOmFxxRW2n.wCHKQem62JorTw49jTdtny', NULL, '2023-06-22 16:43:40', '2023-06-22 16:43:40', NULL);
INSERT INTO `users` VALUES (3, 'Konter 2', 'konter2@mail.com', NULL, '$2y$10$nH90wRQQIqauEfDUjwmNau6ofefxCPb3GetCSfwEZssIiawj1vhlu', NULL, '2023-06-22 16:44:06', '2023-06-22 16:44:06', NULL);

SET FOREIGN_KEY_CHECKS = 1;
